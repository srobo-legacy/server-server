#!/usr/bin/env python
import argparse
import os
import remote
import sys

MY_DIR = os.path.dirname( __file__ )

parser = argparse.ArgumentParser( description = "Copy puppet config to VM and apply it" )
parser.add_argument( "--puppet",
                     help = "Puppet directory",
                     default = os.path.join( MY_DIR, "puppet" ) )
parser.add_argument( "--secrets",
                     help = "Secrets directory",
                     default = os.path.join( MY_DIR, "secrets" ) )
parser.add_argument( "-s", "--server",
                     help = "Hostname of target server",
                     default = "127.0.0.1" )
parser.add_argument( "-p", "--port",
                     help = "Port number of SSH of target server",
                     default = 10022, type = int )
args = parser.parse_args()

s = remote.VMSSH( hostname = args.server,
                  port = args.port )

# Copy/untar data to /srv
if not os.path.exists( args.secrets ):
    print >>sys.stderr, "secrets not found."
    print >>sys.stderr, "Either clone the dummy secrets repository, or get the real secrets ;-)"

print "Transferring secrets...",
sys.stdout.flush()
s.push_dir( args.secrets,
            "/srv/secrets",
            remove_remote = True,
            mode = "0700" )
print "done."

# Install the puppet config
print "Transferring new puppet config...",
sys.stdout.flush()
s.push_dir( args.puppet, "/etc/puppet", remove_remote = True )
print "done."

# Apply the puppet config
r = s.exec_command( "puppet apply /etc/puppet/manifests/sr-dev.pp" )

while True:
    c = 0

    for f in r[1:]:
        l = f.readline()
        if l == "":
            c += 1
        else:
            print l.strip()

    if c == 2:
        break

r[0].channel.recv_exit_status()


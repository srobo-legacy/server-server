#!/usr/bin/env python
import os
import sys
from subprocess import check_call, Popen, PIPE

FEDORA_ISO = "Fedora-17-i386-DVD.iso"

def run( *args, **kw ):
    "Wrapper around check_call that sets shell to True"
    kw["shell"] = True

    return check_call( *args, **kw )

def guestfish( args, cmds ):
    "Run a set of guestfish commands"
    p = Popen( "guestfish " + args, shell = True,
               stdin = PIPE )
    p.communicate( cmds )
    assert p.wait() == 0

if not os.path.exists( FEDORA_ISO ):
    print >>sys.stderr, """Fedora ISO "{0}" not found.""".format( FEDORA_ISO )
    print >>sys.stderr, "Aborting."
    exit(1)

# Create the boot disk
run( "./create-ks-disk ks.cfg fd" )

# Create the disk to contain /boot
# This will be dissected later for pv-grub compatability

run( "qemu-img create -f qcow2 hd-boot 1G" )
guestfish( "-a hd-boot",
           """run
part-disk /dev/vda msdos
""" )

# Create the disk to contain root and swap 
# Note that this is larger than on Linode, but the root FS created will be
# the right size
run( "qemu-img create -f qcow2 hd-root 30G" )
guestfish( "-a hd-root",
           """run
part-init /dev/vda msdos

# Root partition  -- 18GB
# Assume sector size of 512
part-add /dev/vda primary 1 37748736

# Swap partition -- 512MB
part-add /dev/vda primary 37748737 38797313
""" )

run( """qemu-kvm -boot n -m 1023 \
    -net nic,vlan=1 \
    -net user,vlan=1,tftp=`pwd`/pxe/,bootfile=/pxelinux.0 \
    -drive file=hd-boot,index=0,media=disk \
    -drive file=hd-root,index=1,media=disk \
    -drive file=fd,index=2,media=disk \
    -drive file={iso},media=cdrom""".format( FEDORA_ISO ) )

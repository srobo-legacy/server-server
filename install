#!/usr/bin/env python
import os
import sys
from subprocess import check_call, Popen, PIPE
import progressbar
from urllib import urlretrieve

FEDORA_ISO = "Fedora-17-i386-DVD.iso"
FEDORA_ISO_URL = "http://download.fedoraproject.org/pub/fedora/linux/releases/17/Fedora/i386/iso/Fedora-17-i386-DVD.iso"

PXE_DIR = "pxe"

def run( *args, **kw ):
    "Wrapper around check_call that sets shell to True"
    kw["shell"] = True

    return check_call( *args, **kw )

def guestfish( args, cmds ):
    "Run a set of guestfish commands"
    p = Popen( "guestfish " + args, shell = True,
               stdin = PIPE )
    p.communicate( cmds )
    assert p.wait() == 0

class PBWrapper(object):
    def __init__(self):
        self.pb = None

def get_download_hook():

    pw = PBWrapper()

    def download_hook( down, chunk_size, total_size ):

        if pw.pb == None:
            w = [ "Downloading: ", progressbar.Percentage(), " ",
                  progressbar.Bar( marker = progressbar.RotatingMarker() ),
                  progressbar.FileTransferSpeed() ]

            pw.pb = progressbar.ProgressBar( maxval = total_size,
                                             widgets = w )
            pw.pb.start()

        pw.pb.update( down * chunk_size )

    return download_hook

if not os.path.exists( FEDORA_ISO ):
    print >>sys.stderr, """Fedora ISO "{0}" not found.""".format( FEDORA_ISO )

    urlretrieve( FEDORA_ISO_URL, FEDORA_ISO,
                 reporthook = get_download_hook() )

# Construct the PXE files
for fname in [ "initrd.img", "vmlinuz" ]:
    target = os.path.join( PXE_DIR, fname )

    if not os.path.exists( target ):
        run( "iso-read -i {iso} -e images/pxeboot/{fname} -o {of}".format(
                iso = FEDORA_ISO,
                fname = fname,
                of = target ) )

# Create the boot disk
run( "./create-ks-disk ks.cfg fd" )

# Create the disk to contain /boot
# This will be dissected later for pv-grub compatability

run( "qemu-img create -f qcow2 hd-boot 1G" )
guestfish( "-a hd-boot",
           """run
part-disk /dev/vda msdos
""" )

# Create the disk to contain root and swap 
# Note that this is larger than on Linode, but the root FS created will be
# the right size
run( "qemu-img create -f qcow2 hd-root 30G" )
guestfish( "-a hd-root",
           """run
part-init /dev/vda msdos

# Root partition  -- 18GB
# Assume sector size of 512
part-add /dev/vda primary 1 37748736

# Swap partition -- 512MB
part-add /dev/vda primary 37748737 38797313
""" )

run( """qemu-kvm -boot n -m 1023 \
    -net nic,vlan=1 \
    -net user,vlan=1,tftp=`pwd`/pxe/,bootfile=/pxelinux.0 \
    -drive file=hd-boot,index=0,media=disk \
    -drive file=hd-root,index=1,media=disk,cache=unsafe \
    -drive file=fd,index=2,media=disk \
    -drive file={iso},media=cdrom""".format( FEDORA_ISO ) )

#!/usr/bin/env python
import shutil
import sys
import vm

class WrongArgCount(Exception):
    pass

class Command(object):
    pass

class ListDiskSets(Command):
    "List the current disk sets"
    cmd = "list"
    usage = "list"
    def __init__(self):
        Command.__init__(self)

        v = vm.VM()

        for x in v.list_disk_sets():
            print x

class NewDiskSet(Command):
    "Create a new disk set"
    cmd = "new"
    usage = "new NAME [BASENAME]"
    def __init__(self, name, basename = "base"):
        Command.__init__(self)

        v = vm.VM()
        v.create_set( name, basename )

class RmDiskSet(Command):
    "Delete a disk set"
    cmd = "rm"
    usage = "rm NAME"
    def __init__(self, name):
        Command.__init__(self)

        v = vm.VM()

        sets = v.list_disk_sets()
        assert name in sets

        v.set_disk_set(name)
        d = v.disk_get_dir()

        shutil.rmtree( d )

commands = [ ListDiskSets, NewDiskSet, RmDiskSet ]

cmd_dict = {}
for c in commands:
    cmd_dict[c.cmd] = c

def usage():
    print >>sys.stderr, "Usage: disk-sets CMD [args]"

if len(sys.argv) < 2:
    usage()
    exit(1)

CMD = sys.argv[1]
if CMD not in cmd_dict:
    print >>sys.stderr, "Invalid command: '{}'".format( CMD )
    usage()
    exit(1)

cmd = cmd_dict[CMD]

try:
    cmd( *sys.argv[2:] )
except (WrongArgCount):
    print >>sys.stderr, "Wrong number of arguments"
    print >>sys.stderr, "Usage:", cmd.usage
    exit(1)
